server.port=8087

#configurar o profile no inciializador do docker
#spring.profiles.active=dev

spring.application.name= infnet-devops-project
management.metrics.enable.jvm=true
management.endpoint.health.show-details=always
#!cuidado- Metricas habilitadas para estudo, indeal em prod Ã© usar o Spring security e alterar o path default do actuator
#management.endpoints.web.exposure.include= metrics,prometheus
management.endpoints.web.exposure.include= metrics, prometheus,info,health,httptrace,env,loggers,configprops,caches,startup,shutdown,heapdump,threaddump
management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,300ms,1000ms,5000ms
management.metrics.tags.application=#${spring.application.name}

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=123456
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql=true
#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=never

##ZIPKIN
spring.zipkin.base-url=http://127.0.0.1:9411/
